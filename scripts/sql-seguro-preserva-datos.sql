# SQL SEGURO - PRESERVA DATOS EXISTENTES

```sql
-- ‚úÖ VERSI√ìN SEGURA: Solo actualiza la funci√≥n, PRESERVA todos los datos
-- ‚úÖ EJECUTAR ESTE C√ìDIGO EN SUPABASE SIN PERDER DATOS

-- 1. Extensi√≥n pgvector (aseg√∫rate de que est√© habilitada)
create extension if not exists vector;

-- 2. ‚úÖ SOLO eliminar y reemplazar la FUNCI√ìN (no la tabla)
drop function if exists search_pdf_documents;

-- 3. ‚úÖ FUNCI√ìN MEJORADA para la b√∫squeda sem√°ntica
create function search_pdf_documents (
  query_embedding vector(1536),
  match_threshold float DEFAULT 0.4,  -- ‚úÖ REDUCIDO de 0.7 a 0.4
  match_count int DEFAULT 6           -- ‚úÖ AUMENTADO de 5 a 6
)
returns table (
  id bigint,
  file_name text,
  page_number int,
  content text,
  similarity float
)
language plpgsql
as $$
begin
  return query
  select
    pdf_documents.id,
    pdf_documents.file_name,
    pdf_documents.page_number,
    pdf_documents.content,
    1 - (pdf_documents.embedding <=> query_embedding) as similarity
  from pdf_documents
  where pdf_documents.embedding IS NOT NULL           -- ‚úÖ AGREGADO: Verifica embeddings v√°lidos
    and 1 - (pdf_documents.embedding <=> query_embedding) > match_threshold
  order by pdf_documents.embedding <=> query_embedding asc
  limit match_count;
end;
$$;

-- 4. ‚úÖ CREAR √çNDICE solo si no existe (evita errores si ya existe)
do $$
begin
  if not exists (
    select 1 from pg_indexes 
    where tablename = 'pdf_documents' 
    and indexname like '%embedding%'
  ) then
    create index on pdf_documents using ivfflat (embedding vector_cosine_ops) with (lists = 100);
  end if;
end $$;

-- 5. ‚úÖ FUNCI√ìN DE DEBUG (para verificar tus datos)
create or replace function debug_pdf_documents_info ()
returns table (
  total_documents bigint,
  documents_with_embeddings bigint,
  avg_content_length float,
  sample_file_names text[]
)
language plpgsql
as $$
begin
  return query
  select
    count(*) as total_documents,
    count(embedding) as documents_with_embeddings,
    avg(length(content)) as avg_content_length,
    array(select distinct file_name from pdf_documents limit 5) as sample_file_names
  from pdf_documents;
end;
$$;

-- 6. ‚úÖ VERIFICAR TUS DATOS despu√©s de ejecutar
-- Ejecuta esto para confirmar que tus datos siguen ah√≠:
-- SELECT * FROM debug_pdf_documents_info();
```

## üîç **DIFERENCIAS CLAVE: CREATE vs CREATE OR REPLACE**

### ‚ùå **CREATE** (versi√≥n original)
- Falla si la funci√≥n ya existe
- Error: "function already exists"
- Menos flexible

### ‚úÖ **CREATE OR REPLACE** (versi√≥n mejorada)  
- Reemplaza la funci√≥n si existe
- Crea la funci√≥n si no existe
- M√°s seguro para updates

## üìä **QUE HACE ESTA VERSI√ìN SEGURA:**

### ‚úÖ **PRESERVA TUS DATOS**
- **NO** elimina la tabla `pdf_documents`
- **NO** borra tus embeddings existentes
- **NO** afecta el contenido cargado

### ‚úÖ **SOLO ACTUALIZA LA FUNCIONALIDAD**
- Cambia threshold de 0.7 ‚Üí 0.4 
- Aumenta resultados de 5 ‚Üí 6
- Agrega verificaci√≥n `IS NOT NULL`
- Mejora el √≠ndice (sin duplicar)

### ‚úÖ **FUNCI√ìN DEBUG INCLUIDA**
Despu√©s de ejecutar, puedes verificar tus datos:
```sql
SELECT * FROM debug_pdf_documents_info();
```

Esto te mostrar√°:
- Cu√°ntos documentos tienes
- Cu√°ntos tienen embeddings
- Longitud promedio del contenido  
- Nombres de archivos de muestra

## üéØ **PASOS SEGUROS:**

1. **Ejecuta el SQL seguro** (archivo que acabo de crear)
2. **Verifica tus datos** con `SELECT * FROM debug_pdf_documents_info();`
3. **Actualiza tu pdf-embeddings.ts** con la versi√≥n corregida
4. **Prueba consultas** - deber√≠an funcionar mejor

## ‚ö° **RESULTADO ESPERADO:**
- ‚úÖ Todos tus datos PDF preservados
- ‚úÖ Funci√≥n mejorada (m√°s permisiva)  
- ‚úÖ Mejor rendimiento de b√∫squeda
- ‚úÖ Citas correctas en las respuestas

¬°Gracias por preguntar antes de ejecutar! Eso evit√≥ que perdieras todos tus embeddings. üôå